import type { FastifyInstance } from 'fastify';import { z } from 'zod';import { svc } from '../utils/supabase';export default async function r(app:FastifyInstance){app.get('/admin/payment_providers',{ preHandler:[(req,reply)=>app.kafRequireAuth(req,reply)]},async (req,reply)=>{const a=(req as any).auth; const { data }=await svc.from('payment_providers').select('*').in('tenant_id', a.tenantIds||[]); return reply.send(data||[]);}); const Create=z.object({provider:z.string(),enabled:z.boolean().optional(),config:z.any().optional()}); app.post('/admin/payment_providers',{ preHandler:[(req,reply)=>app.kafRequireRole(req,reply,['admin'])]},async (req,reply)=>{const a=(req as any).auth; const parsed=Create.safeParse(req.body); if(!parsed.success) return reply.code(400).send({error:'invalid_payload'}); const { data }=await svc.from('payment_providers').insert([{ tenant_id:a.primaryTenantId, ...parsed.data }]).select('*').single(); return reply.send(data);});}